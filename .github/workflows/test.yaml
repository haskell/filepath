name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc: ['8.0', '8.2', '8.4', '8.6', '8.8', '8.10', '9.0', '9.2']
        cabal: ['latest']
        include:
          - os: ubuntu-latest
            ghc: 'recommended'
            experimental: true
          - os: ubuntu-latest
            ghc: 'latest'
            experimental: true
          - os: windows-latest
            ghc: '9.2.1'
            experimental: true
        exclude:
          - os: macOS-latest
            ghc: '8.0'
          - os: macOS-latest
            ghc: '8.2'
          - os: macOS-latest
            ghc: '8.4'
          - os: macOS-latest
            ghc: '8.6'
          - os: macOS-latest
            ghc: '8.8'
          - os: macOS-latest
            ghc: '9.0'
          - os: windows-latest
            ghc: '8.0'
          - os: windows-latest
            ghc: '8.2'
          - os: windows-latest
            ghc: '8.4'
          - os: windows-latest
            ghc: '8.6'
          - os: windows-latest
            ghc: '8.8'
          - os: windows-latest
            ghc: '9.0'
          - os: windows-latest
            ghc: '9.2'

    steps:
    - uses: actions/checkout@v2

    - name: Install ghc/cabal
      run: |
        set -eux
        if [ "${{ matrix.ghc }}" == 'HEAD' ] ; then
          ghcup install ghc -u 'https://gitlab.haskell.org/api/v4/projects/1/jobs/artifacts/master/raw/ghc-x86_64-deb10-linux.tar.xz?job=validate-x86_64-linux-deb10-unreg-hadrian' --set head
        else
          ghcup install ghc --set ${{ matrix.ghc }}
        fi
        ghcup install cabal ${{ matrix.cabal }}
      shell: bash

    - name: Build
      run: |
        set -eux
        [[ "${{ matrix.ghc }}" == 'HEAD' ]] ||
          [[ "${{ matrix.ghc }}" == 'recommended' ]] ||
          [[ "${{ matrix.ghc }}" == 'latest' ]] ||
          [[ "$(ghc --numeric-version)" =~ "${{ matrix.ghc }}" ]]
        cabal update
        cabal build --enable-tests --enable-benchmarks
        cabal test
        cabal haddock
        cabal check
        cabal sdist
      shell: bash

    - if: matrix.os == 'ubuntu-latest'
      name: make all
      run: |
        set -eux
        export "PATH=$HOME/.cabal/bin:$PATH"
        cabal install --overwrite-policy=always --install-method=copy cpphs
        make all
        git diff --exit-code

  emulated:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arch: ['s390x', 'ppc64le', 'armv7', 'aarch64']
    steps:
    - uses: actions/checkout@v2
    - uses: uraimo/run-on-arch-action@v2.1.1
      timeout-minutes: 60
      with:
        arch: ${{ matrix.arch }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update -y
          apt-get install -y ghc libghc-quickcheck2-dev libghc-tasty-dev libghc-tasty-quickcheck-prof cpphs git make
        run: |
          ghc --version
          ghc --make -o Main tests/Test.hs -itests/ +RTS -s
          ./Main +RTS -s
          ghc --make -o Main tests/Main.hs -itests/ +RTS -s
          ./Main +RTS -s

  emulated-i386:
    runs-on: ubuntu-latest
    container:
      image: i386/ubuntu:bionic
    steps:
    - name: install
      run: |
          apt-get update -y
          apt-get install -y ghc libghc-quickcheck2-dev libghc-tasty-dev libghc-tasty-quickcheck-prof cpphs git make
      shell: bash
    - uses: actions/checkout@v1
    - name: test
      run: |
          ghc --version
          ghc --make -o Main tests/Test.hs -itests/ +RTS -s
          ./Main +RTS -s
          ghc --make -o Main tests/Main.hs -itests/ +RTS -s
          ./Main +RTS -s
      shell: bash

  bounds-checking:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test
      run: |
        ghcup install ghc --set 9.2.2
        ghcup install cabal latest
        cabal update
        cabal run -w ghc-9.2.2 --ghc-options='-fcheck-prim-bounds -fno-ignore-asserts' bytestring-tests
